{"ast":null,"code":"import _slicedToArray from\"C:/Users/FAYZO/OneDrive/Documents/CODING PROJECTS/Project/project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useState}from\"react\";//This file is context for all components interested in this (components that need the info to run certain functions e.g. the number of favorites will be\n// required by the nav bar to display the number of favorites in a badge).\nimport{jsx as _jsx}from\"react/jsx-runtime\";var FavoritesContext=/*#__PURE__*/createContext({favorites:[],totalFavorites:0,addFavorite:function addFavorite(favoriteMeetup){},removeFavorite:function removeFavorite(meetupId){},itemIsFavorite:function itemIsFavorite(meetupId){}});// below is the context 'provider' which creates context using props so it can dynamically be accesses through any component interested.\nexport function FavoritesContextProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userFavorites=_useState2[0],setUserFavorites=_useState2[1];// Function that handles adding favorites into favorites page\nfunction addFavoriteHandler(favoriteMeetup){setUserFavorites(function(prevUserFavorites){return prevUserFavorites.concat(favoriteMeetup);});}// function that handles removal\nfunction removeFavoriteHandler(meetupId){setUserFavorites(function(prevUserFavorites){return prevUserFavorites.filter(function(meetup){return meetup.id!==meetupId;});});}function iteamIsFavoriteHandler(meetupId){return userFavorites.some(function(meetup){return meetup.id===meetupId;});}var context={favorites:userFavorites,totalFavorites:userFavorites.length,//below exposing functions to all interested components\naddFavorite:addFavoriteHandler,removeFavorite:removeFavoriteHandler,itemIsFavorite:iteamIsFavoriteHandler};return/*#__PURE__*/_jsx(FavoritesContext.Provider,{value:context,children:props.children});}export default FavoritesContext;","map":{"version":3,"sources":["C:/Users/FAYZO/OneDrive/Documents/CODING PROJECTS/Project/project/src/store/favorites-context.js"],"names":["createContext","useState","FavoritesContext","favorites","totalFavorites","addFavorite","favoriteMeetup","removeFavorite","meetupId","itemIsFavorite","FavoritesContextProvider","props","userFavorites","setUserFavorites","addFavoriteHandler","prevUserFavorites","concat","removeFavoriteHandler","filter","meetup","id","iteamIsFavoriteHandler","some","context","length","children"],"mappings":"uJAAA,OAASA,aAAT,CAAwBC,QAAxB,KAAwC,OAAxC,CAEA;AACA;2CAEA,GAAMC,CAAAA,gBAAgB,cAAGF,aAAa,CAAC,CACnCG,SAAS,CAAE,EADwB,CAEnCC,cAAc,CAAE,CAFmB,CAGnCC,WAAW,CAAE,qBAACC,cAAD,CAAoB,CAAE,CAHA,CAInCC,cAAc,CAAE,wBAACC,QAAD,CAAc,CAAE,CAJG,CAKnCC,cAAc,CAAE,wBAACD,QAAD,CAAc,CAAE,CALG,CAAD,CAAtC,CASA;AACA,MAAO,SAASE,CAAAA,wBAAT,CAAkCC,KAAlC,CAAyC,CAC5C,cAA4CV,QAAQ,CAAC,EAAD,CAApD,wCAAQW,aAAR,eAAuBC,gBAAvB,eAEA;AACA,QAASC,CAAAA,kBAAT,CAA4BR,cAA5B,CAA4C,CACxCO,gBAAgB,CAAC,SAACE,iBAAD,CAAuB,CACpC,MAAOA,CAAAA,iBAAiB,CAACC,MAAlB,CAAyBV,cAAzB,CAAP,CACH,CAFe,CAAhB,CAGH,CAED;AACA,QAASW,CAAAA,qBAAT,CAA+BT,QAA/B,CAAyC,CACrCK,gBAAgB,CAAC,SAAAE,iBAAiB,CAAI,CAClC,MAAOA,CAAAA,iBAAiB,CAACG,MAAlB,CAAyB,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,EAAP,GAAcZ,QAAlB,EAA/B,CAAP,CACH,CAFe,CAAhB,CAGH,CAED,QAASa,CAAAA,sBAAT,CAAgCb,QAAhC,CAA0C,CACtC,MAAOI,CAAAA,aAAa,CAACU,IAAd,CAAmB,SAAAH,MAAM,QAAIA,CAAAA,MAAM,CAACC,EAAP,GAAcZ,QAAlB,EAAzB,CAAP,CACH,CAED,GAAMe,CAAAA,OAAO,CAAG,CACZpB,SAAS,CAAES,aADC,CAEZR,cAAc,CAAEQ,aAAa,CAACY,MAFlB,CAGZ;AACAnB,WAAW,CAAES,kBAJD,CAKZP,cAAc,CAAEU,qBALJ,CAMZR,cAAc,CAAEY,sBANJ,CAAhB,CASA,mBAAO,KAAC,gBAAD,CAAkB,QAAlB,EAA2B,KAAK,CAAEE,OAAlC,UACFZ,KAAK,CAACc,QADJ,EAAP,CAGH,CAED,cAAevB,CAAAA,gBAAf","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n//This file is context for all components interested in this (components that need the info to run certain functions e.g. the number of favorites will be\r\n// required by the nav bar to display the number of favorites in a badge).\r\n\r\nconst FavoritesContext = createContext({\r\n    favorites: [],\r\n    totalFavorites: 0,\r\n    addFavorite: (favoriteMeetup) => {},\r\n    removeFavorite: (meetupId) => {},\r\n    itemIsFavorite: (meetupId) => {}\r\n});\r\n\r\n\r\n// below is the context 'provider' which creates context using props so it can dynamically be accesses through any component interested.\r\nexport function FavoritesContextProvider(props) {\r\n    const [ userFavorites, setUserFavorites ] = useState([]);\r\n\r\n    // Function that handles adding favorites into favorites page\r\n    function addFavoriteHandler(favoriteMeetup) {\r\n        setUserFavorites((prevUserFavorites) => {\r\n            return prevUserFavorites.concat(favoriteMeetup);\r\n        });\r\n    }\r\n\r\n    // function that handles removal\r\n    function removeFavoriteHandler(meetupId) {\r\n        setUserFavorites(prevUserFavorites => {\r\n            return prevUserFavorites.filter(meetup => meetup.id !== meetupId);\r\n        });\r\n    }\r\n\r\n    function iteamIsFavoriteHandler(meetupId) {\r\n        return userFavorites.some(meetup => meetup.id === meetupId);\r\n    }\r\n    \r\n    const context = {\r\n        favorites: userFavorites,\r\n        totalFavorites: userFavorites.length,\r\n        //below exposing functions to all interested components\r\n        addFavorite: addFavoriteHandler,\r\n        removeFavorite: removeFavoriteHandler,\r\n        itemIsFavorite: iteamIsFavoriteHandler\r\n    };\r\n\r\n    return <FavoritesContext.Provider value={context}> \r\n        {props.children}\r\n    </FavoritesContext.Provider>\r\n}\r\n\r\nexport default FavoritesContext;"]},"metadata":{},"sourceType":"module"}