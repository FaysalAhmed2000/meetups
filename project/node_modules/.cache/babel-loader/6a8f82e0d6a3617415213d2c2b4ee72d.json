{"ast":null,"code":"import _objectSpread from\"C:/Users/FAYZO/OneDrive/Documents/CODING PROJECTS/Project/project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/FAYZO/OneDrive/Documents/CODING PROJECTS/Project/project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";import MeetupList from\"../components/meetups/MeetupList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AllMeetupsPage(){// useState below to manage the pages state during firebase loading time\nvar _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),loadedMeetups=_useState4[0],setLoadedMeetups=_useState4[1];//below is the loading function\nuseEffect(function(){//function starts off with setting the state of the page to loading.\nsetIsLoading(true);//fetching data from our server\nfetch('https://react-getting-started-3a25b-default-rtdb.firebaseio.com/meetups.json').then(function(response){return response.json();})//Below: the function creates an empty array, then creates a new variable(meetup) and assigns 'key' from data values\n.then(function(data){var meetups=[];for(var key in data){var meetup=_objectSpread({id:key},data[key]);//New data from meetup variable is pushed into the meetupS array\nmeetups.push(meetup);}//then the state of loading is set to false and the pages conditions change\nsetIsLoading(false);setLoadedMeetups(meetups);});},[]);// If statement for when the loading state is set to true. 'Loading...' will be displayed\nif(isLoading){/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})});}return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"All Meetups\"}),/*#__PURE__*/_jsx(MeetupList,{meetups:loadedMeetups})]});}export default AllMeetupsPage;","map":{"version":3,"sources":["C:/Users/FAYZO/OneDrive/Documents/CODING PROJECTS/Project/project/src/pages/AllMeetups.js"],"names":["useState","useEffect","MeetupList","AllMeetupsPage","isLoading","setIsLoading","loadedMeetups","setLoadedMeetups","fetch","then","response","json","data","meetups","key","meetup","id","push"],"mappings":"6SAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,UAAP,KAAuB,kCAAvB,C,wFAGA,QAASC,CAAAA,cAAT,EAA0B,CAExB;AACA,cAAkCH,QAAQ,CAAC,IAAD,CAA1C,wCAAOI,SAAP,eAAkBC,YAAlB,eACA,eAA0CL,QAAQ,CAAC,EAAD,CAAlD,yCAAOM,aAAP,eAAsBC,gBAAtB,eAEA;AACAN,SAAS,CAAC,UAAM,CACd;AACAI,YAAY,CAAC,IAAD,CAAZ,CACA;AACAG,KAAK,CACH,8EADG,CAAL,CAGDC,IAHC,CAGI,SAACC,QAAD,CAAc,CACjB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACF,CALC,CAMF;AANE,CAODF,IAPC,CAOI,SAACG,IAAD,CAAU,CACZ,GAAMC,CAAAA,OAAO,CAAG,EAAhB,CAEA,IAAI,GAAMC,CAAAA,GAAV,GAAiBF,CAAAA,IAAjB,CAAuB,CACrB,GAAMG,CAAAA,MAAM,gBACVC,EAAE,CAAEF,GADM,EAEPF,IAAI,CAACE,GAAD,CAFG,CAAZ,CAIA;AACAD,OAAO,CAACI,IAAR,CAAaF,MAAb,EACD,CACD;AACFV,YAAY,CAAC,KAAD,CAAZ,CACAE,gBAAgB,CAACM,OAAD,CAAhB,CACD,CArBC,EAsBD,CA1BQ,CA0BN,EA1BM,CAAT,CA6BF;AACE,GAAGT,SAAH,CAAc,CACZ,mDACE,iCADF,GAGD,CAEC,mBAAO,wCACL,mCADK,cAEL,KAAC,UAAD,EAAY,OAAO,CAAEE,aAArB,EAFK,GAAP,CAID,CAED,cAAeH,CAAAA,cAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\n\r\nfunction AllMeetupsPage() {\r\n\r\n  // useState below to manage the pages state during firebase loading time\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n\r\n  //below is the loading function\r\n  useEffect(() => {\r\n    //function starts off with setting the state of the page to loading.\r\n    setIsLoading(true);\r\n    //fetching data from our server\r\n    fetch(\r\n      'https://react-getting-started-3a25b-default-rtdb.firebaseio.com/meetups.json'\r\n      )\r\n  .then((response) => {\r\n     return response.json();\r\n  })\r\n  //Below: the function creates an empty array, then creates a new variable(meetup) and assigns 'key' from data values\r\n  .then((data) => {\r\n      const meetups = [];\r\n\r\n      for(const key in data) {\r\n        const meetup = {\r\n          id: key,\r\n          ...data[key]\r\n        };\r\n        //New data from meetup variable is pushed into the meetupS array\r\n        meetups.push(meetup);\r\n      }\r\n      //then the state of loading is set to false and the pages conditions change\r\n    setIsLoading(false);\r\n    setLoadedMeetups(meetups);\r\n  });\r\n  }, []);\r\n\r\n  \r\n// If statement for when the loading state is set to true. 'Loading...' will be displayed\r\n  if(isLoading) {\r\n    <section>\r\n      <p>Loading...</p>\r\n    </section>\r\n  }\r\n  \r\n    return <section>\r\n      <h1>All Meetups</h1>\r\n      <MeetupList meetups={loadedMeetups} />\r\n      </section>;\r\n  }\r\n  \r\n  export default AllMeetupsPage;"]},"metadata":{},"sourceType":"module"}