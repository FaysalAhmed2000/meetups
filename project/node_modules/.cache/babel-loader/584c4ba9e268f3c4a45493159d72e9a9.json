{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FAYZO\\\\OneDrive\\\\Documents\\\\CODING PROJECTS\\\\Project\\\\project\\\\src\\\\store\\\\favorites-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\"; //This file is context for all components interested in this (components that need the info to run certain functions e.g. the number of favorites will be\n// required by the nav bar to display the number of favorites in a badge).\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesContext = /*#__PURE__*/createContext({\n  favorites: [],\n  totalFavorites: 0,\n  addFavorite: favoriteMeetup => {},\n  removeFavorite: meetupId => {},\n  itemIsFavorite: meetupId => {}\n}); // below is the context 'provider' which creates context using props so it can dynamically be accesses through any component interested.\n\nexport function FavoritesContextProvider(props) {\n  _s();\n\n  const [userFavorites, setUserFavorites] = useState([]); // Function that\n\n  function removeFavoriteHandler(meetupId) {\n    setUserFavorites(prevUserFavorites => {\n      return prevUserFavorites.filter(meetup => meetup.id !== meetupId);\n    });\n  }\n\n  function iteamIsFavoriteHandler(meetupId) {\n    return userFavorites.some(meetup => meetup.id === meetupId);\n  }\n\n  const context = {\n    favorites: userFavorites,\n    totalFavorites: userFavorites.length,\n    //below exposing functions to all interested components\n    removeFavorite: removeFavoriteHandler,\n    itemIsFavorite: iteamIsFavoriteHandler\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n\n_s(FavoritesContextProvider, \"tNn5rsEHp2HwMNFlS1rR09Lzgz4=\");\n\n_c = FavoritesContextProvider;\nexport default FavoritesContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoritesContextProvider\");","map":{"version":3,"sources":["C:/Users/FAYZO/OneDrive/Documents/CODING PROJECTS/Project/project/src/store/favorites-context.js"],"names":["createContext","useState","FavoritesContext","favorites","totalFavorites","addFavorite","favoriteMeetup","removeFavorite","meetupId","itemIsFavorite","FavoritesContextProvider","props","userFavorites","setUserFavorites","removeFavoriteHandler","prevUserFavorites","filter","meetup","id","iteamIsFavoriteHandler","some","context","length","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC,C,CAEA;AACA;;;AAEA,MAAMC,gBAAgB,gBAAGF,aAAa,CAAC;AACnCG,EAAAA,SAAS,EAAE,EADwB;AAEnCC,EAAAA,cAAc,EAAE,CAFmB;AAGnCC,EAAAA,WAAW,EAAGC,cAAD,IAAoB,CAAE,CAHA;AAInCC,EAAAA,cAAc,EAAGC,QAAD,IAAc,CAAE,CAJG;AAKnCC,EAAAA,cAAc,EAAGD,QAAD,IAAc,CAAE;AALG,CAAD,CAAtC,C,CASA;;AACA,OAAO,SAASE,wBAAT,CAAkCC,KAAlC,EAAyC;AAAA;;AAC5C,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD,CAD4C,CAG5C;;AAGA,WAASa,qBAAT,CAA+BN,QAA/B,EAAyC;AACrCK,IAAAA,gBAAgB,CAACE,iBAAiB,IAAI;AAClC,aAAOA,iBAAiB,CAACC,MAAlB,CAAyBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcV,QAAjD,CAAP;AACH,KAFe,CAAhB;AAGH;;AAED,WAASW,sBAAT,CAAgCX,QAAhC,EAA0C;AACtC,WAAOI,aAAa,CAACQ,IAAd,CAAmBH,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcV,QAA3C,CAAP;AACH;;AAED,QAAMa,OAAO,GAAG;AACZlB,IAAAA,SAAS,EAAES,aADC;AAEZR,IAAAA,cAAc,EAAEQ,aAAa,CAACU,MAFlB;AAGZ;AAEAf,IAAAA,cAAc,EAAEO,qBALJ;AAMZL,IAAAA,cAAc,EAAEU;AANJ,GAAhB;AASA,sBAAO,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEE,OAAlC;AAAA,cACFV,KAAK,CAACY;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GA5Beb,wB;;KAAAA,wB;AA8BhB,eAAeR,gBAAf","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n//This file is context for all components interested in this (components that need the info to run certain functions e.g. the number of favorites will be\r\n// required by the nav bar to display the number of favorites in a badge).\r\n\r\nconst FavoritesContext = createContext({\r\n    favorites: [],\r\n    totalFavorites: 0,\r\n    addFavorite: (favoriteMeetup) => {},\r\n    removeFavorite: (meetupId) => {},\r\n    itemIsFavorite: (meetupId) => {}\r\n});\r\n\r\n\r\n// below is the context 'provider' which creates context using props so it can dynamically be accesses through any component interested.\r\nexport function FavoritesContextProvider(props) {\r\n    const [ userFavorites, setUserFavorites ] = useState([]);\r\n\r\n    // Function that\r\n\r\n\r\n    function removeFavoriteHandler(meetupId) {\r\n        setUserFavorites(prevUserFavorites => {\r\n            return prevUserFavorites.filter(meetup => meetup.id !== meetupId);\r\n        });\r\n    }\r\n\r\n    function iteamIsFavoriteHandler(meetupId) {\r\n        return userFavorites.some(meetup => meetup.id === meetupId);\r\n    }\r\n    \r\n    const context = {\r\n        favorites: userFavorites,\r\n        totalFavorites: userFavorites.length,\r\n        //below exposing functions to all interested components\r\n       \r\n        removeFavorite: removeFavoriteHandler,\r\n        itemIsFavorite: iteamIsFavoriteHandler\r\n    };\r\n\r\n    return <FavoritesContext.Provider value={context}> \r\n        {props.children}\r\n    </FavoritesContext.Provider>\r\n}\r\n\r\nexport default FavoritesContext;"]},"metadata":{},"sourceType":"module"}