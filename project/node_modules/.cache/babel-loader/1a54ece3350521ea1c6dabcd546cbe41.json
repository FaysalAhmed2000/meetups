{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FAYZO\\\\OneDrive\\\\Documents\\\\CODING PROJECTS\\\\Project\\\\project\\\\src\\\\pages\\\\AllMeetups.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllMeetupsPage() {\n  _s();\n\n  // useState below to manage the pages state during firebase loading time\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedMeetups, setLoadedMeetups] = useState([]); //below is the loading function\n\n  useEffect(() => {\n    //function starts off with setting the state of the page to loading.\n    setIsLoading(true); //fetching data from our server\n\n    fetch('https://meetups-79ce1-default-rtdb.firebaseio.com/meetups.json').then(response => {\n      return response.json();\n    }) //Below: the function creates an empty array, then creates a new variable(meetup) and assigns 'key' from data values\n    .then(data => {\n      const meetups = [];\n\n      for (const key in data) {\n        const meetup = {\n          id: key,\n          ...data[key]\n        }; //New data from meetup variable is pushed into the meetupS array\n\n        meetups.push(meetup);\n      } //then the state of loading is set to false and the pages conditions change\n\n\n      setIsLoading(false);\n      setLoadedMeetups(meetups);\n    });\n  }, []); // If statement for when the loading state is set to true. 'Loading...' will be displayed\n\n  if (isLoading) {\n    /*#__PURE__*/\n    _jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Meetups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: loadedMeetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n}\n\n_s(AllMeetupsPage, \"JeEKF2tZ58/s7PjUTNq9ybMF8W0=\");\n\n_c = AllMeetupsPage;\nexport default AllMeetupsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMeetupsPage\");","map":{"version":3,"sources":["C:/Users/FAYZO/OneDrive/Documents/CODING PROJECTS/Project/project/src/pages/AllMeetups.js"],"names":["useState","useEffect","MeetupList","AllMeetupsPage","isLoading","setIsLoading","loadedMeetups","setLoadedMeetups","fetch","then","response","json","data","meetups","key","meetup","id","push"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;;AAGA,SAASC,cAAT,GAA0B;AAAA;;AAExB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD,CAJwB,CAMxB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAI,IAAAA,YAAY,CAAC,IAAD,CAAZ,CAFc,CAGd;;AACAG,IAAAA,KAAK,CACH,gEADG,CAAL,CAGDC,IAHC,CAGKC,QAAD,IAAc;AACjB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACF,KALC,EAMF;AANE,KAODF,IAPC,CAOKG,IAAD,IAAU;AACZ,YAAMC,OAAO,GAAG,EAAhB;;AAEA,WAAI,MAAMC,GAAV,IAAiBF,IAAjB,EAAuB;AACrB,cAAMG,MAAM,GAAG;AACbC,UAAAA,EAAE,EAAEF,GADS;AAEb,aAAGF,IAAI,CAACE,GAAD;AAFM,SAAf,CADqB,CAKrB;;AACAD,QAAAA,OAAO,CAACI,IAAR,CAAaF,MAAb;AACD,OAVW,CAWZ;;;AACFV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,gBAAgB,CAACM,OAAD,CAAhB;AACD,KArBC;AAsBD,GA1BQ,EA0BN,EA1BM,CAAT,CAPwB,CAoC1B;;AACE,MAAGT,SAAH,EAAc;AACZ;AAAA;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAGD;;AAEC,sBAAO;AAAA,4BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEE;AAArB;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID;;GA/CMH,c;;KAAAA,c;AAiDP,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\n\r\nfunction AllMeetupsPage() {\r\n\r\n  // useState below to manage the pages state during firebase loading time\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n\r\n  //below is the loading function\r\n  useEffect(() => {\r\n    //function starts off with setting the state of the page to loading.\r\n    setIsLoading(true);\r\n    //fetching data from our server\r\n    fetch(\r\n      'https://meetups-79ce1-default-rtdb.firebaseio.com/meetups.json'\r\n      )\r\n  .then((response) => {\r\n     return response.json();\r\n  })\r\n  //Below: the function creates an empty array, then creates a new variable(meetup) and assigns 'key' from data values\r\n  .then((data) => {\r\n      const meetups = [];\r\n\r\n      for(const key in data) {\r\n        const meetup = {\r\n          id: key,\r\n          ...data[key]\r\n        };\r\n        //New data from meetup variable is pushed into the meetupS array\r\n        meetups.push(meetup);\r\n      }\r\n      //then the state of loading is set to false and the pages conditions change\r\n    setIsLoading(false);\r\n    setLoadedMeetups(meetups);\r\n  });\r\n  }, []);\r\n\r\n  \r\n// If statement for when the loading state is set to true. 'Loading...' will be displayed\r\n  if(isLoading) {\r\n    <section>\r\n      <p>Loading...</p>\r\n    </section>\r\n  }\r\n  \r\n    return <section>\r\n      <h1>All Meetups</h1>\r\n      <MeetupList meetups={loadedMeetups} />\r\n      </section>;\r\n  }\r\n  \r\n  export default AllMeetupsPage;"]},"metadata":{},"sourceType":"module"}